{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: \"SignPage\",\n  data() {\n    return {\n      isLoading: false,\n      showPassword: false,\n      serverError: \"\",\n      serverSuccess: \"\",\n      formData: {\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        phoneNumber: \"\",\n        password: \"\",\n        deliveryService: \"\",\n        poids: \"\"\n      },\n      errors: {\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        phoneNumber: \"\",\n        password: \"\",\n        deliveryService: \"\",\n        poids: \"\"\n      },\n      selectedOption: \"Client\"\n    };\n  },\n  methods: {\n    showPasswordClick() {\n      this.showPassword = !this.showPassword;\n    },\n    changeField(propertyName, value) {\n      if (this.errors[propertyName] !== \"\") {\n        this.errors[propertyName] = \"\";\n      }\n      this.formData[propertyName] = value;\n    },\n    changeField(propertyName, value) {\n      if (this.errors[propertyName] !== \"\") {\n        this.errors[propertyName] = \"\";\n      }\n      this.formData[propertyName] = value;\n    },\n    async register() {\n      this.isLoading = true;\n      try {\n        const response = await axios.post('/api/user', this.formData);\n        console.log(response);\n        this.isLoading = false;\n        this.serverSuccess = \"Utilisateur enregistré avec succès!\";\n        // Réinitialiser le formulaire ou rediriger vers une autre page si nécessaire\n      } catch (error) {\n        this.isLoading = false;\n        this.serverError = \"Erreur lors de l'enregistrement de l'utilisateur.\";\n        console.error(error);\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"AA0GA;AACA;EACAA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;MACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;MAEA;MACAC;QACAP;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;MACA;MACAE;IACA;EACA;EAEAC;IACAC;MACA;IACA;IACAC;MACA;QACA;MACA;MACA;IACA;IACAA;MACA;QACA;MACA;MACA;IACA;IACA;MACA;MAEA;QACA;QACAC;QACA;QACA;QACA;MACA;QACA;QACA;QACAA;MACA;IAEA;EACA;AACA","names":["name","data","isLoading","showPassword","serverError","serverSuccess","formData","firstName","lastName","email","phoneNumber","password","deliveryService","poids","errors","selectedOption","methods","showPasswordClick","changeField","console"],"sourceRoot":"src/pages/Auth","sources":["SignPage.vue"],"sourcesContent":["<template>\n  <form class=\"signUp\" @submit.prevent=\"register\">\n<h1 class=\"signUp__name\" style=\"display : flex;\">\n  Sign Up As\n <span\n        :class=\"{ 'signUp_option': true, 'selected-option': selectedOption === 'Client' }\"\n        @click=\"selectedOption = 'Client'\"\n      >\n        Client\n      </span>\n      <span\n        :class=\"{ 'signUp_option': true, 'selected-option': selectedOption === 'Delivery' }\"\n        @click=\"selectedOption = 'Delivery'\"\n      >\n        Delivery\n      </span>\n\n</h1>\n    <BaseAlert\n      v-if=\"!!serverError\"\n      class=\"signUp__alert\"\n      variant=\"danger\"\n      :message=\"serverError\"\n    />\n\n    <BaseAlert\n      v-if=\"!!serverSuccess\"\n      class=\"signUp__alert\"\n      variant=\"success\"\n      :message=\"serverSuccess\"\n    />\n\n    <div class=\"signUp__userInfo\">\n      <BaseInput\n        label=\"First Name\"\n        placeholder=\"First Name\"\n        :value=\"formData.firstName\"\n        :error=\"errors.firstName\"\n        @onInput=\"(value) => changeField('firstName', value)\"\n      />\n      <BaseInput\n        label=\"Last Name\"\n        placeholder=\"Last Name\"\n        :value=\"formData.lastName\"\n        :error=\"errors.lastName\"\n        @onInput=\"(value) => changeField('lastName', value)\"\n      />\n    </div>\n    <BaseInput\n      label=\"Email\"\n      placeholder=\"name@example.com\"\n      :value=\"formData.email\"\n      :error=\"errors.email\"\n      @onInput=\"(value) => changeField('email', value)\"\n    />\n    <BaseInput\n      label=\"Phone number\"\n      placeholder=\"+998 (99) 324-42-91\"\n      :value=\"formData.phoneNumber\"\n      :error=\"errors.phoneNumber\"\n      @onInput=\"(value) => changeField('phoneNumber', value)\"\n    />\n <div v-if=\"selectedOption === 'Delivery'\">\n  <BaseInput  \n      label=\"Siret\"\n      placeholder=\"803714100\"\n      :value=\"formData.deliveryService\"\n      :error=\"errors.deliveryService\"\n      @onInput=\"(value) => changeField('deliveryService', value)\"\n    />\n      <BaseInput  \n      label=\"Poids Max\"\n      placeholder=\"120 kg\"\n      :value=\"formData.poids\"\n      :error=\"errors.poids\"\n      @onInput=\"(value) => changeField('poids', value)\"\n    />\n</div>\n    <BaseInput\n      class=\"signUp__baseInput\"\n      label=\"Password\"\n      placeholder=\"min. 8 characters\"\n      :value=\"formData.password\"\n      type=\"password\"\n      :showPassword=\"showPassword\"\n      :error=\"errors.password\"\n      @onPasswordToggle=\"showPasswordClick\"\n      @onInput=\"(value) => changeField('password', value)\"\n    />\n\n    <BaseButton\n      variant=\"primary\"\n      class=\"signUp__baseBtn\"\n      @onClick=\"register\"\n      :loading=\"isLoading\"\n    >\n      Register\n    </BaseButton>\n    <p class=\"signUp__text\">\n      Do you want to out ?\n      <router-link to=\"/auth/login\" class=\"signUp__link\"> Login </router-link>\n    </p>\n  </form>\n</template>\n\n<script>\nimport axios from 'axios';\nexport default {\n  name: \"SignPage\",\n  data() {\n    return {\n      isLoading: false,\n      showPassword: false,\n      serverError: \"\",\n      serverSuccess: \"\",\n      formData: {\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        phoneNumber: \"\",\n        password: \"\",\n        deliveryService: \"\",\n        poids: \"\",\n\n      },\n      errors: {\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        phoneNumber: \"\",\n        password: \"\",\n        deliveryService: \"\",\n        poids: \"\",\n      },\n      selectedOption: \"Client\" \n    };\n  },\n\n  methods: {\n    showPasswordClick() {\n      this.showPassword = !this.showPassword;\n    },\n    changeField(propertyName, value) {\n      if (this.errors[propertyName] !== \"\") {\n        this.errors[propertyName] = \"\";\n      }\n      this.formData[propertyName] = value;\n    },\n     changeField(propertyName, value) {\n    if (this.errors[propertyName] !== \"\") {\n      this.errors[propertyName] = \"\";\n    }\n    this.formData[propertyName] = value;\n  },\n    async register() {\n      this.isLoading = true;\n\n      try {\n        const response = await axios.post('/api/user', this.formData);\n        console.log(response);\n        this.isLoading = false;\n        this.serverSuccess = \"Utilisateur enregistré avec succès!\";\n        // Réinitialiser le formulaire ou rediriger vers une autre page si nécessaire\n      } catch (error) {\n        this.isLoading = false;\n        this.serverError = \"Erreur lors de l'enregistrement de l'utilisateur.\";\n        console.error(error);\n      }\n    \n    },\n  },\n};\n</script>\n\n<style lang=\"scss\">\n.signUp {\n  width: 60%;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translateX(-50%) translateY(-50%);\n\n  &__alert {\n    margin-bottom: 16px;\n  }\n\n  &__name {\n    color: $color-dark;\n    font-size: 32px;\n    font-family: $base-font;\n    margin-bottom: 40px;\n    font-weight: 700;\n    letter-spacing: 0.1px;\n  }\n\n  &__userInfo {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    gap: 0 10px;\n  }\n\n  &__baseInput {\n    margin-bottom: 28px !important;\n  }\n\n  &__baseBtn {\n    width: 100%;\n    margin-bottom: 35px;\n  }\n\n  &__text {\n    color: $color-dark;\n    font-family: $base-font;\n    font-weight: 400;\n    font-size: 14px;\n    line-height: 20px;\n    text-align: center;\n  }\n\n  &__link {\n    font-size: 14px;\n    color: $color-primary;\n  }\n  &_option{\n    color: #4E60FF;\n    border: solid;\n    margin: 0 12px;\n    cursor: pointer;\n    padding: 5px;\n    align-self: center;\n    font-size: initial;\n  }\n}\n.selected-option {\n  /* Styles for selected option */\n  background-color: cornflowerblue;; /* Change to the desired background color */\n  color: white; /* Change to the desired text color */\n}\n\n@media screen and (max-width: 768px) {\n  .signUp {\n    width: 95%;\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: \"AddressPage\",\n  data() {\n    return {\n      isEditing: false,\n      isLoading: false,\n      formData: {\n        address: \"\",\n        Ville: \"\",\n        complement: \"\",\n        postal: \"\"\n      },\n      errors: {\n        address: \"\",\n        Ville: \"\",\n        complement: \"\",\n        postal: \"\"\n      }\n    };\n  },\n  computed: {},\n  mounted() {\n    console;\n    log('test');\n    this.initPage();\n  },\n  methods: {\n    cancelEditing() {\n      this.isEditing = false;\n      this.initPage();\n    },\n    changeField(propertyName, value) {\n      if (this.errors[propertyName] !== \"\") {\n        this.errors[propertyName] = \"\";\n      }\n      this.formData[propertyName] = value;\n      this.formData.emailNotifications[propertyName] = value;\n    },\n    async saveChangeClick() {\n      this.isLoading = true;\n      try {\n        const response = await axios.post('/save-address', {\n          email: localStorage.getItem('delEmail') ? localStorage.getItem('delEmail') : localStorage.getItem('userEmail'),\n          // Obtenez l'identifiant de l'utilisateur à partir des données Vuex\n          adress: this.formData.address,\n          Ville: this.formData.Ville,\n          complement: this.formData.complement,\n          postal: this.formData.postal\n        });\n        if (response.data.success) {\n          // Adresse enregistrée avec succès\n          this.isLoading = false;\n          this.isEditing = false;\n        } else {\n          // Gestion des erreurs\n        }\n      } catch (error) {\n        // Gestion des erreurs\n        this.isLoading = false;\n      }\n      setTimeout(() => {\n        this.isLoading = false;\n        this.isEditing = false;\n      }, 2500);\n    },\n    async initPage() {\n      try {\n        const email = localStorage.getItem('delEmail') || localStorage.getItem('userEmail');\n        const response = await axios.get('/get-address', {\n          params: {\n            email\n          }\n        });\n        if (response.data.success) {\n          const address = response.data.address;\n          this.formData.address = address.address;\n          this.formData.Ville = address.Ville;\n          this.formData.complement = address.complement;\n          this.formData.postal = address.postal;\n        } else {\n          // Gestion des erreurs si l'adresse n'a pas été trouvée\n        }\n      } catch (error) {\n        // Gestion des erreurs\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"AAoFA;AAEA;EACAA;EACAC;IACA;MACAC;MACAC;MACAC;QACAC;QACAC;QACAC;QACAC;MACA;MACAC;QACAJ;QACAC;QACAC;QACAC;MACA;IACA;EACA;EACAE,WACA;EACAC;IACAC;IAAAC;IACA;EACA;EACAC;IAEAC;MACA;MACA;IACA;IACAC;MACA;QACA;MACA;MAEA;MACA;IACA;IACA;MACA;MAEA;QACA;UACAC;UAAA;UACAC;UACAZ;UACAC;UACAC;QACA;QAEA;UACA;UACA;UACA;QACA;UACA;QAAA;MAEA;QACA;QACA;MACA;MAEAW;QACA;QACA;MACA;IACA;IACA;MACA;QACA;QACA;UACAC;YAAAH;UAAA;QACA;QAEA;UACA;UACA;UACA;UACA;UACA;QACA;UACA;QAAA;MAEA;QACA;MAAA;IAEA;EAEA;AACA","names":["name","data","isEditing","isLoading","formData","address","Ville","complement","postal","errors","computed","mounted","console","log","methods","cancelEditing","changeField","email","adress","setTimeout","params"],"sourceRoot":"src/pages/Profile","sources":["AddressPage.vue"],"sourcesContent":["<template>\n  <div>\n    <h3 class=\"profile__name\">Address</h3>\n    <div class=\"account__info\">\n      <h2 class=\"account__title\">shipping address</h2>\n    \n      <div class=\"account__action\">\n      \n        <BaseButton\n          v-if=\"isEditing\"\n          class=\"account__btns-discardBtn\"\n          @onClick=\"cancelEditing\"\n        >\n          Cancel\n        </BaseButton>\n\n        <BaseButton\n          v-else\n          variant=\"primary-outline\"\n          @onClick=\"isEditing = true\"\n        >\n          Change\n        </BaseButton>\n      </div>\n\n      <div class=\"account__input\">\n        <BaseInput\n          label=\"address\"\n          placeholder=\"7 rue saint-lazare\"\n          :value=\"formData.address\"\n          :error=\"errors.address\"\n          :disabled=\"!isEditing || isLoading\"\n          @onInput=\"(value) => changeField('address', value)\"\n\n        />\n\n        <BaseInput\n          label=\"Ville\"\n          placeholder=\"Paris\"\n          :value=\"formData.Ville\"\n          :error=\"errors.Ville\"\n          :disabled=\"!isEditing || isLoading\"\n          @onInput=\"(value) => changeField('Ville', value)\"\n        />\n\n        <BaseInput\n          label=\"complement of address\"\n          placeholder=\"deuxiéme étage porte B\"\n          :value=\"formData.complement\"\n          :error=\"errors.complement\"\n          :disabled=\"!isEditing || isLoading\"\n          @onInput=\"(value) => changeField('complement', value)\"\n        />\n\n        <BaseInput\n          label=\"Postal Code\"\n          placeholder=\"75000\"\n          :value=\"formData.postal\"\n          :error=\"errors.postal\"\n          :disabled=\"!isEditing || isLoading\"\n          @onInput=\"(value) => changeField('postal', value)\"\n        />\n      </div>\n\n    \n\n      <div class=\"profile-form-divider\"></div>\n\n      <div class=\"account__btns\">\n        <div>\n          <BaseButton\n            v-if=\"isEditing\"\n            class=\"SaveBtn\"\n            @onClick=\"saveChangeClick\"\n            :loading=\"isLoading\"\n            >Save changes</BaseButton\n          >\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: \"AddressPage\",\n  data() {\n    return {\n      isEditing: false,\n      isLoading: false,\n      formData: {\n        address: \"\",\n        Ville: \"\",\n        complement: \"\",\n        postal: \"\",\n      },\n      errors: {\n        address: \"\",\n        Ville: \"\",\n        complement: \"\",\n        postal: \"\",\n      },\n    };\n  },\n  computed: {\n  },\n  mounted() {\n    console;log('test')\n  this.initPage();\n       },\n  methods: {\n    \n    cancelEditing() {\n      this.isEditing = false;\n      this.initPage();\n    },\n    changeField(propertyName, value) {\n      if (this.errors[propertyName] !== \"\") {\n        this.errors[propertyName] = \"\";\n      }\n\n      this.formData[propertyName] = value;\n      this.formData.emailNotifications[propertyName] = value;\n    },\n    async saveChangeClick() {\n      this.isLoading = true;\n\n      try {\n        const response = await axios.post('/save-address', {\n          email: localStorage.getItem('delEmail') ?localStorage.getItem('delEmail') : localStorage.getItem('userEmail'), // Obtenez l'identifiant de l'utilisateur à partir des données Vuex\n          adress: this.formData.address,\n          Ville: this.formData.Ville,\n          complement: this.formData.complement,\n          postal: this.formData.postal,\n        });\n\n        if (response.data.success) {\n          // Adresse enregistrée avec succès\n          this.isLoading = false;\n          this.isEditing = false;\n        } else {\n          // Gestion des erreurs\n        }\n      } catch (error) {\n        // Gestion des erreurs\n        this.isLoading = false;\n      }\n\n      setTimeout(() => {\n        this.isLoading = false;\n        this.isEditing = false;\n      }, 2500);\n    },\n    async initPage() {\n      try {\n        const email = localStorage.getItem('delEmail') || localStorage.getItem('userEmail');\n        const response = await axios.get('/get-address', {\n          params: { email },\n        });\n\n        if (response.data.success) {\n          const address = response.data.address;\n          this.formData.address = address.address;\n          this.formData.Ville = address.Ville;\n          this.formData.complement = address.complement;\n          this.formData.postal = address.postal;\n        } else {\n          // Gestion des erreurs si l'adresse n'a pas été trouvée\n        }\n      } catch (error) {\n        // Gestion des erreurs\n      }\n    },\n\n  },\n};\n</script>\n\n<style lang=\"scss\">\n.account {\n  &__info {\n    background: $color-white;\n    border: 1px solid $color-grey-lightest;\n    border-radius: 16px;\n    padding: 16px;\n    margin-bottom: 24px;\n    // height: 100vh;\n  }\n\n  &__title {\n    font-family: $base-font;\n    font-weight: 700;\n    font-size: 18px;\n    line-height: 24px;\n    letter-spacing: 0.1px;\n    margin-bottom: 16px;\n    color: $color-dark;\n  }\n\n  &__text {\n    font-family: $base-font;\n    font-weight: 600;\n    font-size: 12px;\n    line-height: 16px;\n    margin-bottom: 8px;\n    color: $color-grey-dark;\n  }\n\n  &__action {\n    display: flex;\n    align-items: center;\n    margin-bottom: 16px;\n  }\n\n  &__img {\n    cursor: pointer;\n    border-radius: 12px;\n    margin-right: 24px;\n    width: 76px;\n    height: 76px;\n  }\n\n  &__input {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    gap: 16px;\n    margin-bottom: 15px;\n  }\n\n  &__btns {\n    display: flex;\n    justify-content: space-between;\n\n    &-discardBtn {\n      margin-right: 16px;\n    }\n\n    .SaveBtn {\n      min-width: 120px;\n    }\n  }\n}\n\n.profile-notifications {\n  &__wrapper {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    gap: 24px 16px;\n    margin-bottom: 36px;\n  }\n}\n\n.profile-form-divider {\n  margin-top: 20px;\n  margin-bottom: 20px;\n  height: 1px;\n  width: 100%;\n  background-color: $color-grey-light;\n}\n\n@media screen and (max-width: 768px) {\n  .account {\n    &__input {\n      grid-template-columns: 1fr;\n    }\n\n    &__btns {\n      flex-direction: column;\n\n      div {\n        &:nth-child(2) {\n          display: flex;\n          justify-content: space-between;\n        }\n\n        button {\n          width: 100%;\n        }\n      }\n\n      &-dangerBtn {\n        margin-bottom: 40px;\n      }\n    }\n  }\n\n  .profile-notifications {\n    &__wrapper {\n      grid-template-columns: 1fr;\n    }\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
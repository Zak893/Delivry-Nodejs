{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'YourComponentName',\n  data() {\n    return {\n      drivers: [],\n      mapViews: []\n    };\n  },\n  mounted() {\n    this.fetchGeocodeData();\n    console.log(this.mapViews);\n    console.log(this.drivers);\n  },\n  methods: {\n    async fetchGeocodeData() {\n      const apiKey = 'aPrWU6Uw8tE7zNLA_FkthYgHNY0yV2PUo6RnoVa3h1I';\n      try {\n        const response = await axios.get('/get-delivry-address');\n        this.drivers = response.data.drivers;\n        for (let index = 0; index < this.drivers.length; index++) {\n          let Address = \"6 rue heinrich, boulogne-billancourt\";\n          try {\n            const response = await axios.get(`https://geocode.search.hereapi.com/v1/geocode?q=${Address}&apiKey=${apiKey}`);\n            const mapview = response.data.items[0].mapView;\n            this.drivers[index].mapView = mapview;\n          } catch (error) {\n            console.error(error);\n          }\n        }\n        console.log(this.drivers); // Les drivers avec les données de mapView mises à jour\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"AAoCA;AAEA;EACAA;EACAC;IACA;MACAC;MACAC;IACA;EACA;EACAC;IACA;IACAC;IACAA;EAIA;EACAC;IACA;MACA;MACA;QACA;QACA;QAEA;UACA;UACA;YACA;YACA;YACA;UACA;YACAD;UACA;QACA;QAEAA;MACA;QACAA;MACA;IACA;EACA;AACA","names":["name","data","drivers","mapViews","mounted","console","methods"],"sourceRoot":"src/pages","sources":["localisationPage.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <h2 class=\"my-orders__heading\">Localisation</h2>\n    <div class=\"my-orders__content\">\n      <h3 class=\"my-orders__content-title\">Delivry</h3>\n      <div id=\"app\">\n      <table>\n        <thead>\n            <tr>\n              <th>User ID</th>\n              <th>Email</th>\n               <th>Addres</th>\n               <th>Email</th>\n              <th>Phone</th>\n            </tr>\n        </thead>\n        <tbody>\n          <tr v-if=\"drivers.length > 0\" v-for=\"(driver,mapViews, index) in drivers\" :key=\"index\">\n            <td>{{driver._id}}</td>\n              <td>{{ driver[0]}}</td>\n              <td>{{ driver.adress+' , '+driver.complement+' , '+driver.postal }}</td>\n              <td>{{ mapViews[0] }}</td>\n              <td>{{ driver.phoneNumber }}</td>\n          </tr>\n          <tr v-if=\"drivers.length == 0\">\n              <td colspan=\"5\">No delivry Localisation available.</td>\n            </tr>\n        </tbody>\n      </table>\n  \n    </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'YourComponentName',\n  data() {\n      return {\n        drivers: [] ,\n        mapViews: [] ,\n      };\n    },\n  mounted() {\n    this.fetchGeocodeData();\n    console.log(this.mapViews)\n    console.log(this.drivers)\n\n\n\n  },\n  methods: {\n    async fetchGeocodeData() {\n    const apiKey = 'aPrWU6Uw8tE7zNLA_FkthYgHNY0yV2PUo6RnoVa3h1I';\n    try {\n      const response = await axios.get('/get-delivry-address');\n      this.drivers = response.data.drivers;\n\n      for (let index = 0; index < this.drivers.length; index++) {\n        let Address = \"6 rue heinrich, boulogne-billancourt\";\n        try {\n          const response = await axios.get(`https://geocode.search.hereapi.com/v1/geocode?q=${Address}&apiKey=${apiKey}`);\n          const mapview = response.data.items[0].mapView;\n          this.drivers[index].mapView = mapview;\n        } catch (error) {\n          console.error(error);\n        }\n      }\n\n      console.log(this.drivers); // Les drivers avec les données de mapView mises à jour\n    } catch (error) {\n      console.error(error);\n    }\n  }\n    }\n};\n</script>\n\n<style lang=\"scss\">\n.my-orders {\n  &__heading {\n    color: $color-dark;\n    font-size: 20px;\n    font-family: $base-font;\n    font-weight: 600;\n    line-height: 28px;\n    letter-spacing: 0.1px;\n    margin-bottom: 16px;\n  }\n\n  &__content {\n    border: 1px solid $color-grey-lightest;\n    border-radius: 16px;\n    padding: 16px;\n    margin-bottom: 24px;\n  }\n\n  &__content-title {\n    color: $color-dark;\n    font-family: $base-font;\n    font-weight: 700;\n    font-size: 18px;\n    line-height: 24px;\n    letter-spacing: 0.1px;\n    margin-bottom: 16px;\n  }\n}\ntable , tr,td , th{\n  border: 1px solid black;\n  padding: 10px;\n}\nbutton.newItem {\n  padding: 5px;\n  margin: 14px 0 0 0;\n  font-weight: bold;\n  font-size: 16px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}